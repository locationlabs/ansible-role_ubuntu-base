---

- name: set timezone
  copy: content="{{ timezone }}" dest=/etc/timezone owner=root group=root mode=0644
  notify: update timezone

- include: install_utilities.yml

- name: update sysctl
  sysctl: name={{ item.name }} value={{ item.value }} state=present
  with_items:
    - { name: "net.core.somaxconn", value: "511" }
    - { name: "fs.file-max", value: "524288" }
    - { name: "net.ipv4.tcp_fin_timeout", value: "15" }
    - { name: "net.ipv4.tcp_window_scaling", value: "1" }
    - { name: "net.ipv4.tcp_max_syn_backlog", value: "3240000" }
    - { name: "vm.swappiness", value: "5" }

- name: update sshd_config
  lineinfile: dest=/etc/ssh/sshd_config regexp="^MaxStartups" line="MaxStartups 100" state=present

- name: upgrade kernel
  apt: update_cache=yes name=linux-generic-lts-vivid state=present
  when: ansible_kernel | version_compare("3.18.0", "lt")
  register: upgrade_kernel

- name: upgrade kernel to latest version
  apt: upgrade=dist update_cache=yes dpkg_options='force-confold,force-confdef'
  when: ubuntu_dist_upgrade|bool

- name: Check if a reboot is required
  register: file
  stat: path=/var/run/reboot-required get_md5=no

- name: reboot instance
  command: /sbin/shutdown -r now
  register: reboot_result
  when: file.stat.exists == true

- name: wait for instance to come online
  local_action:
    module: wait_for
    host: "{{ ansible_ssh_host|default(inventory_hostname) }}"
    port: "{{ ansible_ssh_port|default(ssh_port) }}"
    delay: 30
    timeout: 600
    state: started
  when: file.stat.exists == true
